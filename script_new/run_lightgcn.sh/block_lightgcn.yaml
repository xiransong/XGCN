model: Block_LightGCN
train_dl: EdgeBased_Sampling_Block_TrainDataLoader

device: 'cuda:1'

convergence_threshold: 5
epochs: 150
not_eval: False
key_score_metric: r100
val_freq: 1

data_root: ''
results_root: ''

# train dataloader
EdgeBased_Sampling_Block_TrainDataLoader:
  train_batch_size: 1024
  num_neg: 1
  ensure_neg_is_not_neighbor: False
  edge_sample_ratio: 0.1
  num_gcn_layers: 1
  num_layer_sample: '[]'
  num_workers: 6

# evaluation
# available evaluation methods:
#  'one_pos_whole_graph',
#  'multi_pos_whole_graph',
#  'one_pos_k_neg'
eval:
  validation_method: one_pos_whole_graph
  mask_nei_when_validation: True
  val_batch_size: 128
  file_validation: ''
  
  test_method: one_pos_whole_graph
  mask_nei_when_test: True
  test_batch_size: 128
  file_test: ''

EmbeddingMultiplexer:
  emb_dim: 64
  user_tower:
    device: 'cuda:1'
    output_emd_dim: 64
    id_emb_table:
      device: 'cuda:1'
      from_pretrained: False
      # file_pretrained_emb: ''
      freeze: False
      emd_dim: 64
      emb_init_std: 0.1
      use_sparse: True
      lr: 0.005
    feat_mlp:
      arch: '[]'
      lr: 0.001
  item_tower:
    device: 'cuda:1'
    output_emd_dim: 64
    id_emb_table:
      device: 'cuda:1'
      from_pretrained: False
      # file_pretrained_emb: ''
      freeze: False
      emd_dim: 64
      emb_init_std: 0.1
      use_sparse: True
      lr: 0.005
    feat_mlp:
      arch: '[torch.nn.Linear(300+300, 256), torch.nn.Tanh(), torch.nn.Linear(256, 64)]'
      lr: 0.001
    feat_emb_tables:
      movie_title:
        dtype: IDEmbedding
        device: 'cuda:1'
        from_pretrained: True
        file_pretrained_emb: ''
        freeze: True
        # emd_dim: 64
        # emb_init_std: 0.1
        # use_sparse: False
        # lr: 0.005
      movie_category:
        dtype: IDEmbedding
        device: 'cuda:1'
        from_pretrained: True
        file_pretrained_emb: ''
        freeze: True
        # emd_dim: 64
        # emb_init_std: 0.1
        # use_sparse: False
        # lr: 0.005

Block_LightGCN:
  num_gcn_layers: 1
  num_layer_sample: '[]'
  l2_reg_weight: 0.0
